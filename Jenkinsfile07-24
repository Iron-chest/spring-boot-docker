node {
  def mavenHome = tool name: "maven3.9.8"
  stage ("Git Clone") {
    git credentialsId: 'Github-Jenkins-Credentials', url: 'https://github.com/Iron-chest/spring-boot-docker'
  }
  stage ("MavenBuild") {
    sh "${mavenHome}/bin/mvn clean package"
  }
  stage ("QualityReport") {
//  sh "${mavenHome}/bin/mvn sonar:sonar"
  }
  stage ("NexusUpload") {
//  sh "${mavenHome}/bin/mvn deploy"
  }
  stage ("DockerBuild") {
    sh "docker build -t devopsforjesus/spring-boot-mongo:0.1.0 ."
  }
  stage ("PushImageToRegistry") {
      withCredentials([string(credentialsId: 'DockerHub-Jenkins', variable: 'DockerHub_Jenkins')]) { // Never use (-) instead use (_) e.g Docker_Hub
         sh "docker login -u devopsforjesus -p ${DockerHub_Jenkins}"
}     
    sh "docker push devopsforjesus/spring-boot-mongo:0.1.0"
  }
  // Remove local image in Jenkins Server
  stage("Remove Local Image"){
    sh "docker rmi -f devopsforjesus/spring-boot-mongo:0.1.0"
    }
  stage("Deploy To Kubernetes Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }
}
